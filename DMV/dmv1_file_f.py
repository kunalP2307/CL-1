# -*- coding: utf-8 -*-
"""DMV1_File_F.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cbvsflBcDBfQT4brEaXrftGHHXlqBRtg
"""

import pandas as pd
import json
import matplotlib.pyplot as plt
import numpy as np

#loading dataset in dataframes

csv_df = pd.read_csv('sales.csv')
excel_df = pd.read_excel('sales.xlsx')
json_df = pd.read_json('sales.json')



csv_df.describe()

csv_df.dtypes

csv_df.isnull().sum()

csv_df = csv_df.dropna()

csv_df.isnull().sum()

# Merging two datasets

csv_df.shape

n = 432

csv_df.drop(csv_df.tail(n).index, inplace=True)

csv_df.shape

json_df.drop(json_df.head(len(json_df.index) - n).index, inplace=True)

json_df.shape



df = pd.concat([csv_df, json_df])

df.shape

df.head(10)

# Adding new Column



df.head()



df['Order Date'] = pd.to_datetime(df['Order Date'], format = '%d/%m/%Y')

df['Ship Date'] = pd.to_datetime(df['Ship Date'], format = '%d/%m/%Y')

df.dtypes

df.head()

df['Delievery Time'] = (df['Ship Date'] - df['Order Date']).dt.days

df['Delievery Time'].head()

total_order_val = df['Sales'].sum()

print("Average Order Value", total_order_val / len(df.index))

# Average order value by category of product

df['Sub-Category'].unique()

average_prices = df.groupby('Sub-Category')['Sales'].mean().reset_index()

average_prices

plt.figure(figsize = (10,5))
bars = plt.bar(average_prices['Sub-Category'], average_prices['Sales'])
plt.xlabel('Product Category')
plt.ylabel('Average Sales')
plt.xticks(rotation=45)

for bar in bars:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, height,f'{height:.2f}', ha='center', va='bottom')
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 8))
plt.pie(average_prices['Sales'], labels=average_prices['Sub-Category'], autopct='%1.1f%%', startangle=140)
plt.title('Average Prices by Product Category')
plt.axis('equal')
plt.show()



average_delivery_time = df.groupby('Sub-Category')['Delievery Time'].mean().reset_index()

plt.figure(figsize=(10, 6))
plt.bar(average_delivery_time['Sub-Category'], average_delivery_time['Delievery Time'])
plt.xlabel('Product Category')
plt.ylabel('Average Delivery Time')
plt.title('Average Delivery Time by Product Category')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()



sales_by_state = df.groupby('State')['Sales'].sum().reset_index()

plt.figure(figsize=(16, 6))
plt.bar(sales_by_state['State'], sales_by_state['Sales'])
plt.xlabel('States')
plt.ylabel('Total Sales')
plt.title('Sales by State')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

df['Year'] = df['Order Date'].dt.year

df['Year'].head()

sales_by_year = df.groupby('Year')['Sales'].sum().reset_index()

plt.figure(figsize=(10,6))
plt.plot(sales_by_year['Year'], sales_by_year['Sales'], marker='o', linestyle='-')
plt.xlabel('Year')
plt.ylabel('Total Sales')
plt.title('Sales by Year')
plt.grid(True)
plt.xticks(np.arange(sales_by_year['Year'].min(), sales_by_year['Year'].max() + 1,1))
plt.show()

df['Year'].unique()

sales_by_cat_year = df.groupby(['Year','Sub-Category'])['Sales'].sum().unstack(fill_value=0).reset_index()
sales_by_cat_year.head()





plt.figure(figsize=(16,6))
for category in sales_by_cat_year.columns:
    plt.plot(sales_by_cat_year.index, sales_by_cat_year[category], marker='o', label=category)

plt.xlabel('Year')
plt.ylabel('Total Sales')
plt.title('Sales by Category and year')
plt.grid(True)
# plt.xticks(np.arange(sales_by_cat_year['Year'].min(), sales_by_cat_year['Sub-Category Year'].max() + 1,1))
plt.legend(loc='upper right')
plt.show()